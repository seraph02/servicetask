# 查找当前目录下的所有源文件
# 并将名称保存到 DIR_LIB_SRCS 变量
project(manager)
cmake_minimum_required(VERSION 3.0)
add_compile_options(-std=c++11)
add_definitions(-DBOOST_ERROR_CODE_HEADER_ONLY)
add_definitions(-DBOOST_SYSTEM_NO_DEPRECATED)
FIND_PACKAGE(Boost REQUIRED )
aux_source_directory(. DIR_ManagerLIB_SRCS)
file(GLOB MANAGER_INCLUDE_DIRS ./*.h)
if(NOT MANAGER_DIR)
    set( MANAGER_DIR ${CMAKE_CURRENT_SOURCE_DIR}/)
endif()
INCLUDE_DIRECTORIES(
    ${COMM_INCLUDE_DIRS}
    ${BASE_INCLUDE_DIRS}
    ${CLASSIFY_INCLUDE_DIRS}
    ${EXPCLASSIFY_INCLUDE_DIRS}
    ${JSONCPP_INCLUDE_DIRS}
    ${JSON2PB_INCLUDE_DIRS}
    ${CTIME_INCLUDE_DIRS}
    ${PROTOBUF_INCLUDE_DIRS}
    ${PROTOFILE_DIRS}
    ${CPR_INCLUDE_DIRS}
    ${ELASTICLIENT_INCLUDE_DIRS})
set(MANAGER_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR} CACHE INTERNAL "")

add_library (${PROJECT_NAME} ${DIR_ManagerLIB_SRCS} )

TARGET_LINK_LIBRARIES(${PROJECT_NAME} base jsoncpp ${PROTOBUF_LIBRARIES} ${CPR_LIBRARIES} ${ELASTICLIENT_LIBRARIES} comm libdataclassify libput2db)
install(TARGETS ${PROJECT_NAME} LIBRARY
        DESTINATION lib)



